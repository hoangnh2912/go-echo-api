basePath: /api
definitions:
  requests.ArticleCreateRequest:
    properties:
      article:
        properties:
          body:
            type: string
          description:
            type: string
          tagList:
            items:
              type: string
            type: array
          title:
            type: string
        required:
        - body
        - description
        - title
        type: object
    type: object
  requests.CreateCommentRequest:
    properties:
      comment:
        properties:
          body:
            type: string
        required:
        - body
        type: object
    type: object
  requests.UserLoginRequest:
    properties:
      user:
        properties:
          email:
            type: string
          password:
            type: string
        required:
        - email
        - password
        type: object
    type: object
  requests.UserRegisterRequest:
    properties:
      user:
        properties:
          email:
            type: string
          password:
            type: string
          username:
            type: string
        required:
        - email
        - password
        - username
        type: object
    type: object
  requests.UserUpdateRequest:
    properties:
      user:
        properties:
          bio:
            type: string
          email:
            type: string
          image:
            type: string
          password:
            type: string
          username:
            type: string
        type: object
    type: object
  responses.ArticleListResponse:
    properties:
      articles:
        items:
          $ref: '#/definitions/responses.ArticleResponse'
        type: array
      articlesCount:
        type: integer
    type: object
  responses.ArticleResponse:
    properties:
      author:
        properties:
          bio:
            type: string
          following:
            type: boolean
          image:
            type: string
          username:
            type: string
        type: object
      body:
        type: string
      createdAt:
        type: string
      description:
        type: string
      favorited:
        type: boolean
      favoritesCount:
        type: integer
      slug:
        type: string
      tagList:
        items:
          type: string
        type: array
      title:
        type: string
      updatedAt:
        type: string
    type: object
  responses.CommentListResponse:
    properties:
      comments:
        items:
          $ref: '#/definitions/responses.CommentResponse'
        type: array
    type: object
  responses.CommentResponse:
    properties:
      author:
        properties:
          bio:
            type: string
          following:
            type: boolean
          image:
            type: string
          username:
            type: string
        type: object
      body:
        type: string
      createdAt:
        type: string
      id:
        type: integer
      updatedAt:
        type: string
    type: object
  responses.ProfileResponse:
    properties:
      profile:
        properties:
          bio:
            type: string
          following:
            type: boolean
          image:
            type: string
          username:
            type: string
        type: object
    type: object
  responses.SingleArticleResponse:
    properties:
      article:
        $ref: '#/definitions/responses.ArticleResponse'
    type: object
  responses.SingleCommentResponse:
    properties:
      comment:
        $ref: '#/definitions/responses.CommentResponse'
    type: object
  responses.TagListResponse:
    properties:
      tags:
        items:
          type: string
        type: array
    type: object
  responses.UserResponse:
    properties:
      user:
        properties:
          bio:
            type: string
          email:
            type: string
          image:
            type: string
          token:
            type: string
          username:
            type: string
        type: object
    type: object
  utils.Error:
    properties:
      errors:
        additionalProperties: true
        type: object
    type: object
host: 127.0.0.1:3001
info:
  contact: {}
  description: Conduit API
  title: Conduit API
  version: "1.0"
paths:
  /articles:
    get:
      consumes:
      - application/json
      description: Get most recent articles globally. Use query parameters to filter
        results. Auth is optional
      operationId: get-articles
      parameters:
      - description: Filter by tag
        in: query
        name: tag
        type: string
      - description: Filter by author (username)
        in: query
        name: author
        type: string
      - description: Filter by favorites of a user (username)
        in: query
        name: favorited
        type: string
      - description: Limit number of articles returned (default is 20)
        in: query
        name: limit
        type: integer
      - description: Offset/skip number of articles (default is 0)
        in: query
        name: offset
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/responses.ArticleListResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.Error'
      security:
      - ApiKeyAuth: []
      summary: Get recent articles globally
      tags:
      - article
    post:
      consumes:
      - application/json
      description: Create an article. Auth is require
      operationId: create-article
      parameters:
      - description: Article to create
        in: body
        name: article
        required: true
        schema:
          $ref: '#/definitions/requests.ArticleCreateRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/responses.SingleArticleResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/utils.Error'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/utils.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.Error'
      security:
      - ApiKeyAuth: []
      summary: Create an article
      tags:
      - article
  /articles/{slug}:
    delete:
      consumes:
      - application/json
      description: Delete an article. Auth is required
      operationId: delete-article
      parameters:
      - description: Slug of the article to delete
        in: path
        name: slug
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/utils.Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/utils.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.Error'
      security:
      - ApiKeyAuth: []
      summary: Delete an article
      tags:
      - article
    get:
      consumes:
      - application/json
      description: Get an article. Auth not required
      operationId: get-article
      parameters:
      - description: Slug of the article to get
        in: path
        name: slug
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/responses.SingleArticleResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/utils.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.Error'
      security:
      - ApiKeyAuth: []
      summary: Get an article
      tags:
      - article
    put:
      consumes:
      - application/json
      description: Update an article. Auth is required
      operationId: update-article
      parameters:
      - description: Slug of the article to update
        in: path
        name: slug
        required: true
        type: string
      - description: Article to update
        in: body
        name: article
        required: true
        schema:
          $ref: '#/definitions/requests.ArticleCreateRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/responses.SingleArticleResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/utils.Error'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/utils.Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/utils.Error'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/utils.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.Error'
      security:
      - ApiKeyAuth: []
      summary: Update an article
      tags:
      - article
  /articles/{slug}/comments:
    get:
      consumes:
      - application/json
      description: Get the comments for an article. Auth is optional
      operationId: get-comments
      parameters:
      - description: Slug of the article that you want to get comments for
        in: path
        name: slug
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/responses.CommentListResponse'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/utils.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.Error'
      security:
      - ApiKeyAuth: []
      summary: Get the comments for an article
      tags:
      - comment
    post:
      consumes:
      - application/json
      description: Create a comment for an article. Auth is required
      operationId: add-comment
      parameters:
      - description: Slug of the article that you want to create a comment for
        in: path
        name: slug
        required: true
        type: string
      - description: Comment you want to create
        in: body
        name: comment
        required: true
        schema:
          $ref: '#/definitions/requests.CreateCommentRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/responses.SingleCommentResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/utils.Error'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/utils.Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/utils.Error'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/utils.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.Error'
      security:
      - ApiKeyAuth: []
      summary: Create a comment for an article
      tags:
      - comment
  /articles/{slug}/comments/{id}:
    delete:
      consumes:
      - application/json
      description: Delete a comment for an article. Auth is required
      operationId: delete-comments
      parameters:
      - description: Slug of the article that you want to delete a comment for
        in: path
        name: slug
        required: true
        type: string
      - description: ID of the comment you want to delete
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/utils.Error'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/utils.Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/utils.Error'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/utils.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.Error'
      security:
      - ApiKeyAuth: []
      summary: Delete a comment for an article
      tags:
      - comment
  /articles/{slug}/favorite:
    delete:
      consumes:
      - application/json
      description: Unfavorite an article. Auth is required
      operationId: unfavorite
      parameters:
      - description: Slug of the article that you want to unfavorite
        in: path
        name: slug
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/responses.SingleArticleResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/utils.Error'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/utils.Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/utils.Error'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/utils.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.Error'
      security:
      - ApiKeyAuth: []
      summary: Unfavorite an article
      tags:
      - favorite
    post:
      consumes:
      - application/json
      description: Favorite an article. Auth is required
      operationId: favorite
      parameters:
      - description: Slug of the article that you want to favorite
        in: path
        name: slug
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/responses.SingleArticleResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/utils.Error'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/utils.Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/utils.Error'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/utils.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.Error'
      security:
      - ApiKeyAuth: []
      summary: Favorite an article
      tags:
      - favorite
  /articles/feed:
    get:
      consumes:
      - application/json
      description: Get most recent articles from users you follow. Use query parameters
        to limit. Auth is required
      operationId: feed
      parameters:
      - description: Limit number of articles returned (default is 20)
        in: query
        name: limit
        type: integer
      - description: Offset/skip number of articles (default is 0)
        in: query
        name: offset
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/responses.ArticleListResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/utils.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.Error'
      security:
      - ApiKeyAuth: []
      summary: Get recent articles from users you follow
      tags:
      - article
  /auth/login:
    post:
      consumes:
      - application/json
      description: Login for existing user
      operationId: login
      parameters:
      - description: Credentials to use
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/requests.UserLoginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/responses.UserResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/utils.Error'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/utils.Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/utils.Error'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/utils.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.Error'
      summary: Login for existing user
      tags:
      - user
  /auth/signup:
    post:
      consumes:
      - application/json
      description: Register a new user
      operationId: sign-up
      parameters:
      - description: User info for registration
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/requests.UserRegisterRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/responses.UserResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/utils.Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/utils.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.Error'
      summary: Register a new user
      tags:
      - user
  /profiles/{username}:
    get:
      consumes:
      - application/json
      description: Get a profile of a user of the system. Auth is optional
      operationId: get-profile
      parameters:
      - description: Username of the profile to get
        in: path
        name: username
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/responses.UserResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/utils.Error'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/utils.Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/utils.Error'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/utils.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.Error'
      security:
      - ApiKeyAuth: []
      summary: Get a profile
      tags:
      - profile
  /profiles/{username}/follow:
    delete:
      consumes:
      - application/json
      description: Unfollow a user by username
      operationId: unfollow
      parameters:
      - description: Username of the profile you want to unfollow
        in: path
        name: username
        required: true
        type: string
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/responses.UserResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/utils.Error'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/utils.Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/utils.Error'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/utils.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.Error'
      security:
      - ApiKeyAuth: []
      summary: Unfollow a user
      tags:
      - follow
    post:
      consumes:
      - application/json
      description: Follow a user by username
      operationId: follow
      parameters:
      - description: Username of the profile you want to follow
        in: path
        name: username
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/responses.ProfileResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/utils.Error'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/utils.Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/utils.Error'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/utils.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.Error'
      security:
      - ApiKeyAuth: []
      summary: Follow a user
      tags:
      - follow
  /tags:
    get:
      consumes:
      - application/json
      description: Get tags
      operationId: tags
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/responses.TagListResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/utils.Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/utils.Error'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/utils.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.Error'
      security:
      - ApiKeyAuth: []
      summary: Get tags
      tags:
      - tag
  /user:
    get:
      consumes:
      - application/json
      description: Gets the currently logged-in user
      operationId: current-user
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/responses.UserResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/utils.Error'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/utils.Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/utils.Error'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/utils.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.Error'
      security:
      - ApiKeyAuth: []
      summary: Get the current user
      tags:
      - user
    put:
      consumes:
      - application/json
      description: Update user information for current user
      operationId: update-user
      parameters:
      - description: User details to update. At least **one** field is required.
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/requests.UserUpdateRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/responses.UserResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/utils.Error'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/utils.Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/utils.Error'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/utils.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.Error'
      security:
      - ApiKeyAuth: []
      summary: Update current user
      tags:
      - user
produces:
- application/json
schemes:
- http
- https
securityDefinitions:
  ApiKeyAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
